# YOLOv8-EfficientNet summary: 265 layers, 2265180 parameters, 2265164 gradients, 7.0 GFLOPs
# YOLOv8-EfficientNet summary: 265 layers, 2265180 parameters, 2265164 gradients, 7.0 GFLOPs
# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://blog.csdn.net/weixin_43694096

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, stem, [32, "ReLU6"]] # 0-P1/2
  - [-1, 1, MBConvBlock, [16, 3, 1, 1, 0]] # 1
  - [-1, 1, MBConvBlock, [24, 3, 2, 6, 0.028, True]] # 2-P2/4
  - [-1, 1, MBConvBlock, [24, 3, 1, 6, 0.057]]
  - [-1, 1, MBConvBlock, [40, 5, 2, 6, 0.085]] # 4-P3/8
  - [-1, 1, MBConvBlock, [40, 5, 1, 6, 0.114]]
  - [-1, 1, MBConvBlock, [80, 3, 2, 6, 0.142]] # 6-P4/16
  - [-1, 1, MBConvBlock, [80, 3, 1, 6, 0.171]]
  - [-1, 1, MBConvBlock, [80, 3, 1, 6, 0.200]]
  - [-1, 1, MBConvBlock, [112, 5, 1, 6, 0.228]] # 9
  - [-1, 1, MBConvBlock, [112, 5, 1, 6, 0.257]]
  - [-1, 1, MBConvBlock, [112, 5, 1, 6, 0.285]]
  - [-1, 1, MBConvBlock, [192, 5, 2, 6, 0.314]] # 12-P5/32
  - [-1, 1, MBConvBlock, [192, 5, 1, 6, 0.342]]
  - [-1, 1, MBConvBlock, [192, 5, 1, 6, 0.371]]
  - [-1, 1, MBConvBlock, [192, 5, 1, 6, 0.400]]
  - [-1, 1, MBConvBlock, [320, 3, 1, 6, 0.428]] # 16

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 11], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 19

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 5], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 22 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 19], 1, Concat, [1]] # cat head P4
  - [-1, 3, C2f, [512]] # 25 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 16], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2f, [1024]] # 28 (P5/32-large)

  - [[22, 25, 28], 1, Segment, [nc, 32, 256]] # Detect(P3, P4, P5)

