# VanillaNet5 object detection model with P3-P5 outputs. For details see https://blog.csdn.net/weixin_43694096
# Parameters
nc: 80 # number of classes
kpt_shape: [17, 3]  # number of keypoints, number of dims (2 for x,y or 3 for x,y,visible)
depth_multiple: 1.0 # scales module repeats
width_multiple: 1.0 # scales convolution channels

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [128, 4, 4]] # 0-P2/4
  - [-1, 1, VanillaBlock, [256, 3, 2]] # 1-P3/8
  - [-1, 1, VanillaBlock, [512, 3, 2]] # 2-P4/16
  - [-1, 1, VanillaBlock, [1024, 3, 2]] # 3-P5/32

# YOLOv8.0s head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #1/16
  - [[-1, 2], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 6

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #1/8
  - [[-1, 1], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 9 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]] #1/16
  - [[-1, 6], 1, Concat, [1]] # cat head P4
  - [-1, 3, C2f, [512]] # 12 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 3], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2f, [1024]] # 15 (P5/32-large)

  - [[9, 12, 15], 1, Pose, [nc, kpt_shape]] # Detect(P3, P4, P5)

