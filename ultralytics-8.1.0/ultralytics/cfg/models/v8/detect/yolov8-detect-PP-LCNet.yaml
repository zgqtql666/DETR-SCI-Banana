# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://blog.csdn.net/weixin_43694096

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0n backbone
backbone:
  - [-1, 1, Conv, [16, 3, 2, 1]] # 0-P1/2  ch_out, kernel, stride, padding
  - [-1, 1, DepthSepConv, [32, 3, 1, False]] # 1
  - [-1, 1, DepthSepConv, [64, 3, 2, False]] # 2-P2/4
  - [-1, 1, DepthSepConv, [64, 3, 1, False]] # 3
  - [-1, 1, DepthSepConv, [128, 3, 2, False]] # 4-P3/8
  - [-1, 1, DepthSepConv, [128, 3, 1, False]] # 5
  - [-1, 1, DepthSepConv, [256, 3, 2, False]] # 6-P4/16
  - [-1, 5, DepthSepConv, [256, 5, 1, False]] # 7
  - [-1, 1, DepthSepConv, [512, 5, 2, True]] # 8-P5/32
  - [-1, 1, DepthSepConv, [512, 5, 1, True]] # 9

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 7], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 12

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 5], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 15 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 12], 1, Concat, [1]] # cat head P4
  - [-1, 3, C2f, [512]] # 18 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 9], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2f, [1024]] # 21 (P5/32-large)

  - [[15, 18, 21], 1, Detect, [nc]] # Detect(P3, P4, P5)
